{"version":3,"file":"static/js/562.d2d7d7b5.chunk.js","mappings":"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","sources":["redux/selectors.js","services/constants.js","components/phoneBook/contactForm/ContactForm.jsx","webpack://phonebook-app/./src/components/phoneBook/contactList/ContactList.module.css?1450","components/phoneBook/contactList/Contact.jsx","components/phoneBook/contactList/ContactList.jsx","components/phoneBook/filter/Filter.jsx","components/phoneBook/loader/Loader.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(\n      contact =>\n        contact.phone.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import * as Yup from 'yup';\n\nconst submitSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(/(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/, {\n      message:\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan'\",\n    })\n    .required('Required'),\n  number: Yup.string()\n    .min(7, 'Too Short!')\n    .max(20, 'Too Long!')\n    .matches(\n      /(\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9})/,\n      {\n        message:\n          'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n      }\n    )\n    .required('Required'),\n});\n\nexport { submitSchema };\n","import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport toast from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { useFetchContactsQuery, useAddContactMutation } from 'redux/index';\nimport { submitSchema } from 'services';\n\nconst ContactForm = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContacts] = useAddContactMutation();\n  const formik = useFormik({\n    initialValues: { name: '', number: '' },\n    validationSchema: submitSchema,\n    onSubmit: async values => {\n      const isIncluded = contacts.some(\n        contact =>\n          contact.name.toLowerCase() === values.name.toLowerCase().trim()\n      );\n      if (isIncluded) {\n        formik.resetForm();\n        toast.error(`${values.name.trim()} is already in contacts`);\n        return;\n      }\n\n      await addContacts({\n        name: values.name.trim(),\n        number: values.number.trim(),\n      });\n      toast.success('Contact successfully added!');\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <Box sx={{ mt: 8, mx: 'auto', width: 400 }}>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          variant=\"outlined\"\n          sx={{ width: 1, mb: 2 }}\n          name=\"name\"\n          type=\"text\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          id=\"number\"\n          label=\"Phone number\"\n          variant=\"outlined\"\n          sx={{ width: 1, mb: 2 }}\n          name=\"number\"\n          type=\"tel\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n        <Button sx={{ width: 1, color: 'black' }} type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport { ContactForm };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__BbuqS\",\"container\":\"ContactList_container__eP5Yk\",\"itemContainer\":\"ContactList_itemContainer__ultH3\",\"item\":\"ContactList_item__jJkUw\",\"button\":\"ContactList_button__ytNdM\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { AiFillContacts } from 'react-icons/ai';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useDeleteContactMutation } from 'redux/index';\nimport css from './ContactList.module.css';\n\nexport const Contact = ({ name, phone, id }) => {\n  const [deleteContacts, { isLoading }] = useDeleteContactMutation();\n  console.log(id);\n  return (\n    <div className={css.container}>\n      <div className={css.itemContainer}>\n        <AiFillContacts />\n        <p>{`${name}: ${phone}`}</p>\n      </div>\n      <Link to={`${id}`}>Edit contact</Link>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => deleteContacts(id)}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <ThreeDots\n            height=\"18\"\n            width=\"40\"\n            radius=\"9\"\n            color=\"white\"\n            ariaLabel=\"three-dots-loading\"\n            visible={true}\n          />\n        ) : (\n          'Delete'\n        )}\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { selectFilter } from 'redux/index';\nimport { Contact } from './Contact';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  const filter = useSelector(selectFilter);\n\n  const filtredContacts = useMemo(\n    () =>\n      contacts.filter(\n        contact =>\n          contact.number.toLowerCase().includes(filter.toLowerCase()) ||\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n      ),\n    [contacts, filter]\n  );\n\n  return (\n    <Box sx={{ mx: 'auto', width: 600 }}>\n      <ul className={css.list}>\n        {filtredContacts.map(({ id, name, number }) => {\n          return (\n            <li className={css.item} key={id}>\n              <Contact name={name} phone={number} id={id} />\n            </li>\n          );\n        })}\n      </ul>\n    </Box>\n  );\n};\n\nexport { ContactList };\n","import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, selectFilter } from 'redux/index';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Box sx={{ mt: 1, mb: 2, mx: 'auto', width: 400 }}>\n      <TextField\n        id=\"filter\"\n        label=\"Search contacts\"\n        variant=\"outlined\"\n        sx={{ width: 1, mb: 2 }}\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={({ currentTarget: { value } }) => dispatch(setFilter(value))}\n      />\n    </Box>\n  );\n};\n\nexport { Filter };\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div\n    style={{\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: [{ translateX: '-50%' }, { translateY: '-50%' }],\n    }}\n  >\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"grey\"\n      ariaLabel=\"three-dots-loading\"\n      visible={true}\n    />\n  </div>\n);\n","import { useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useFetchContactsQuery } from 'redux/index';\nimport { ContactForm, ContactList, Filter, Loader } from 'components/phoneBook';\nimport { Outlet } from 'react-router-dom';\n\nconst ContactsPage = () => {\n  const { data, isLoading, isError, error } = useFetchContactsQuery();\n\n  useEffect(() => {\n    if (error) toast.error(error);\n  }, [error]);\n\n  return (\n    <section>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          paddingBottom: 20,\n        }}\n      >\n        <div>\n          <h2>Phonebook</h2>\n          <ContactForm />\n          <Filter />\n        </div>\n        <div>\n          <h2 style={{ marginBottom: 65 }}>Contacts</h2>\n          <div style={{ height: '100vh', overflow: 'scroll' }}>\n            {!isLoading && !isError && <ContactList contacts={data} />}\n          </div>\n        </div>\n      </div>\n      {isLoading && <Loader />}\n      <Toaster />\n      <Outlet />\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","createSelector","contacts","items","contact","phone","toLowerCase","includes","name","submitSchema","Yup","shape","min","max","matches","message","required","number","ContactForm","useFetchContactsQuery","data","useAddContactMutation","addContacts","formik","useFormik","initialValues","validationSchema","onSubmit","values","some","trim","resetForm","toast","Box","sx","mt","mx","width","handleSubmit","TextField","id","label","variant","mb","type","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","color","Contact","useDeleteContactMutation","deleteContacts","isLoading","console","log","className","css","to","onClick","disabled","height","radius","ariaLabel","visible","ContactList","useSelector","filtredContacts","useMemo","map","Filter","dispatch","useDispatch","currentTarget","setFilter","Loader","style","position","left","top","transform","translateX","translateY","isError","useEffect","display","justifyContent","paddingBottom","marginBottom","overflow"],"sourceRoot":""}
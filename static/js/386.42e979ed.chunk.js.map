{"version":3,"file":"static/js/386.42e979ed.chunk.js","mappings":"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","sources":["components/modalWindow/ContactModal.jsx","webpack://phonebook-app/./src/components/phoneBook/editContact/EditContact.module.css?561d","components/phoneBook/editContact/EditContact.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  borderRadius: 2,\n  boxShadow: 24,\n  p: 4,\n  outline: 0,\n};\n\nconst ContactModal = ({ showModal, open, children }) => {\n  const handleClose = () => showModal(false);\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      slots={{ backdrop: Backdrop }}\n      slotProps={{\n        backdrop: {\n          timeout: 500,\n        },\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>{children}</Box>\n      </Fade>\n    </Modal>\n  );\n};\n\nContactModal.propTypes = {\n  showModal: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport default ContactModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EditContact_title__2nHc5\",\"contactContainer\":\"EditContact_contactContainer__VwnRG\"};","import PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport { useShowModalContext } from 'context/ContactModalContext';\nimport { useEditContactMutation } from 'redux/index';\nimport { changeSchema, createObj } from 'services';\nimport { Typography } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport css from './EditContact.module.css';\n\nconst EditContact = ({ contactId, name, number }) => {\n  const [editContact, { isSuccess, error }] = useEditContactMutation();\n  const { setShowEditContact } = useShowModalContext();\n\n  const formik = useFormik({\n    initialValues: { name, number },\n    validationSchema: changeSchema,\n    onSubmit: async values => {\n      if (values.name.trim() === '' || values.number.trim() === '') return;\n\n      const newName = values.name.trim();\n      const newNumber = values.number.trim();\n\n      await editContact(\n        createObj({\n          newName,\n          newNumber,\n          id: contactId,\n          name,\n          number,\n        })\n      );\n\n      formik.resetForm();\n      setTimeout(() => setShowEditContact(false));\n    },\n  });\n\n  useEffect(() => {\n    if (isSuccess) toast.success('Contact successfully edited!');\n    if (error) toast.error(error);\n  }, [isSuccess, error]);\n\n  return (\n    <>\n      <h2 className={css.title}>Edit contact</h2>\n      <div className={css.contactContainer}>\n        <Typography sx={{ display: 'flex', mb: 1 }} variant=\"body1\">\n          <PersonIcon sx={{ mr: 2 }} />\n          {name}\n        </Typography>\n        <Typography sx={{ display: 'flex' }} variant=\"body1\">\n          <PhoneIcon sx={{ mr: 2 }} />\n          {number}\n        </Typography>\n      </div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"name\"\n          label=\"New name\"\n          variant=\"outlined\"\n          sx={{ width: 1, mb: 2 }}\n          name=\"name\"\n          type=\"text\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n          autoComplete=\"off\"\n        />\n        <TextField\n          id=\"number\"\n          label=\"New phone number\"\n          variant=\"outlined\"\n          sx={{ width: 1, mb: 2 }}\n          name=\"number\"\n          type=\"tel\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n          autoComplete=\"off\"\n        />\n        <Button\n          sx={{\n            width: 1,\n            color: 'black',\n            bgcolor: theme => theme.palette.secondary.light,\n          }}\n          type=\"submit\"\n          disabled={!(formik.values.name || formik.values.number)}\n        >\n          Save\n        </Button>\n      </form>\n    </>\n  );\n};\n\nEditContact.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default EditContact;\n","import { useEffect, useMemo } from 'react';\nimport toast from 'react-hot-toast';\nimport { useFetchContactsQuery } from 'redux/index';\nimport { ContactForm, ContactList } from 'components/phoneBook';\nimport { useShowModalContext } from 'context/ContactModalContext';\nimport ContactModal from 'components/modalWindow/ContactModal';\nimport EditContact from 'components/phoneBook/editContact/EditContact';\nimport { Box, Paper } from '@mui/material';\nimport SimpleBackdrop from 'components/phoneBook/loader/SimpleBackdropLoader';\n\nconst ContactsPage = () => {\n  const { data, isLoading, isError, isSuccess, error } =\n    useFetchContactsQuery();\n\n  const {\n    showAddContact,\n    setShowAddContact,\n    showEditContact,\n    setShowEditContact,\n    contactId,\n  } = useShowModalContext();\n\n  useEffect(() => {\n    if (isError && error.status !== 401)\n      toast.error(`Something wrong. Try to reload your page! ${error.status}`);\n  }, [error, isError]);\n\n  const contact = useMemo(() => {\n    if (isSuccess) {\n      return data.find(contact => contact.id === contactId);\n    }\n  }, [contactId, data, isSuccess]);\n\n  return (\n    <Box sx={{ pt: theme => theme.spacing(2) }}>\n      <Paper elevation={5} sx={{ p: theme => theme.spacing(4) }}>\n        {isSuccess && <ContactList contacts={data} />}\n        <ContactModal open={showAddContact} showModal={setShowAddContact}>\n          <ContactForm />\n        </ContactModal>\n        <ContactModal open={showEditContact} showModal={setShowEditContact}>\n          {!!contact && (\n            <EditContact\n              contactId={contact.id}\n              number={contact.number}\n              name={contact.name}\n            />\n          )}\n        </ContactModal>\n      </Paper>\n      <SimpleBackdrop isLoading={isLoading} />\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","outline","showModal","open","children","Modal","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","Box","sx","contactId","name","number","useEditContactMutation","editContact","isSuccess","error","setShowEditContact","useShowModalContext","formik","useFormik","initialValues","validationSchema","changeSchema","onSubmit","values","trim","newName","newNumber","createObj","id","resetForm","setTimeout","useEffect","toast","className","css","Typography","display","mb","variant","Person","mr","Phone","handleSubmit","TextField","label","type","value","onChange","handleChange","touched","Boolean","errors","helperText","autoComplete","Button","color","theme","palette","secondary","light","disabled","useFetchContactsQuery","data","isLoading","isError","showAddContact","setShowAddContact","showEditContact","status","contact","useMemo","find","pt","spacing","Paper","elevation","contacts"],"sourceRoot":""}